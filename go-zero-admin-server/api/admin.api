syntax = "v1"

import (
	"apis/reply.api"
	"apis/verify.api"
	"apis/user.api"
	"apis/search.api"
)

info(
	title: "admin"
	desc: "show admin service"
	author: "wuwenyi"
	email: "773323518@qq.com"
	version: "dev"
)

@server(
	jwt: Auth
	group : jwt
)
service admin-api{
	@handler refreshJwt
	get /admin/api/rjwt () returns (Reply)
	@handler decodeJwt
	get /admin/api/djwt () returns (Reply)
	@handler loginOut
	post /admin/api/verify/loginOut () returns (Reply)
	@handler changePassword
	post /admin/api/verify/changePassword (ChangePasswordByJwtReq) returns (Reply)
	@handler editUser
	post /admin/api/verify/editUser (UpdateUserByJwtReq) returns (Reply)
}

@server(
	group : search
)
service admin-api{
	@handler getUserById
	get /admin/api/search/userId/:id (IdReq) returns (Reply)
	@handler getUserByUserNameLike
	get /admin/api/search/username/:username (UsernameReq) returns (Reply)
	@handler getAllRoles
	get /admin/api/search/roles () returns (Reply)
	@handler getLoginStatus
	get /admin/api/search/loginStatus () returns (Reply)
}

@server(
	group : externalserver
)
service admin-api{
	@handler getQiniuToken
	get /admin/api/qiniuToken () returns (Reply)
}

@server(
	group: verify
)
service admin-api {
	@handler login
	post /admin/api/verify/login (LoginReq) returns (Reply)
}

@server(
	jwt: Auth
	group: user
)
service admin-api {
	@handler getUsers
	get /admin/api/user (GetUsersReq) returns (Reply)
	@handler addUser
	post /admin/api/user (AddUserReq) returns (Reply)
	@handler updateUser
	put /admin/api/user/:id (UpdateUserReq) returns (Reply)
	@handler editUserRoles
	put /admin/api/userRoles/:id (EditUserRolesReq) returns (Reply)
	@handler deleteUser
	delete /admin/api/user/:id (DeleteUserReq) returns (Reply)
}