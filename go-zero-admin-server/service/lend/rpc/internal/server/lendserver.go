// Code generated by goctl. DO NOT EDIT!
// Source: lend.proto

package server

import (
	"context"

	"go-zero-admin-server/service/lend/rpc/internal/logic"
	"go-zero-admin-server/service/lend/rpc/internal/svc"
	"go-zero-admin-server/service/lend/rpc/lend"
)

type LendServer struct {
	svcCtx *svc.ServiceContext
}

func NewLendServer(svcCtx *svc.ServiceContext) *LendServer {
	return &LendServer{
		svcCtx: svcCtx,
	}
}

func (s *LendServer) IsExistLendById(ctx context.Context, in *lend.IdReq) (*lend.IsExistReply, error) {
	l := logic.NewIsExistLendByIdLogic(ctx, s.svcCtx)
	return l.IsExistLendById(in)
}

func (s *LendServer) IsLend(ctx context.Context, in *lend.BookIdReq) (*lend.IsLendReply, error) {
	l := logic.NewIsLendLogic(ctx, s.svcCtx)
	return l.IsLend(in)
}

func (s *LendServer) GetLends(ctx context.Context, in *lend.LendsReq) (*lend.LendsInfoReply, error) {
	l := logic.NewGetLendsLogic(ctx, s.svcCtx)
	return l.GetLends(in)
}

func (s *LendServer) AddLend(ctx context.Context, in *lend.LendAddReq) (*lend.IsSuccessReply, error) {
	l := logic.NewAddLendLogic(ctx, s.svcCtx)
	return l.AddLend(in)
}

func (s *LendServer) DelLend(ctx context.Context, in *lend.IdReq) (*lend.IsSuccessReply, error) {
	l := logic.NewDelLendLogic(ctx, s.svcCtx)
	return l.DelLend(in)
}
