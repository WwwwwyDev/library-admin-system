syntax = "proto3";

package book;

message EmptyReq {

}

message IdReq {
    uint64 id = 1;
}

message IdsReq {
    repeated IdReq ids = 1;
}


message NameReq {
    string name = 1;
}

message TypesReq{
    int64 page = 1;
    int64 limit = 2;
    string name = 3;
}

message TypeUpdateReq {
    uint64 id = 1;
    string name = 2;
    string intro = 3;
}

message TypeAddReq {
    string name = 1;
    string intro = 2;
}

message BooksReq {
    int64 page = 1;
    int64 limit = 2;
    string name = 3;
    string author = 4;
}

message BookUpdateReq {
    uint64 id = 1;
    string name = 2;
    string image = 3;
    string author = 4;
    string info = 5;
    uint64 typeId = 6;
}

message BookAddReq {
    string name = 1;
    string image = 2;
    string author = 3;
    string info = 4;
    uint64 typeId = 6;
}


message TypeInfoReply {
    uint64 id = 1;
    string name = 2;
    string intro = 3;
    repeated BookInfoReply booksInfo = 4;
}

message TypesInfoReply {
    int64 total = 1;
    repeated TypeInfoReply typesInfo = 2;
}

message BookInfoReply {
    uint64 id = 1;
    string name = 2;
    string image = 3;
    string author = 4;
    string info = 5;
    string type = 6;
    uint64 typeId = 7;
}

message BooksInfoReply {
    int64 total = 1;
    repeated BookInfoReply booksInfo = 2;
}

message isExistReply {
    bool isExist = 1;
}

message isSuccessReply {
    bool isSuccess = 1;
}

service Book {
    rpc getBookById(IdReq) returns(BookInfoReply);
    rpc getBookByNameLike(NameReq) returns(BooksInfoReply);
    rpc IsExistBookById(IdReq) returns(isExistReply);
    rpc IsExistBookByName(NameReq) returns(isExistReply);
    rpc getBooks(BooksReq) returns(BooksInfoReply);
    rpc AddBook(BookAddReq) returns(isSuccessReply);
    rpc UpdateBook(BookUpdateReq) returns(isSuccessReply);
    rpc DelBook(IdReq) returns(isSuccessReply);
    rpc DelSomeBook(IdsReq) returns(isSuccessReply);

    rpc getTypeById(IdReq) returns(TypeInfoReply);
    rpc getAllTypes(EmptyReq) returns(TypesInfoReply);
    rpc getTypeByNameLike(NameReq) returns(TypesInfoReply);
    rpc IsExistTypeById(IdReq) returns(isExistReply);
    rpc IsExistTypeByName(NameReq) returns(isExistReply);
    rpc getTypes(TypesReq) returns(TypesInfoReply);
    rpc AddType(TypeAddReq) returns(isSuccessReply);
    rpc UpdateType(TypeUpdateReq) returns(isSuccessReply);
    rpc DelType(IdReq) returns(isSuccessReply);
}
